{
  "id" : "02dd4d26-6489-4415-89e7-e0359aff5206",
  "realm" : "mydoctor-demo",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxTemporaryLockouts" : 0,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "f9214e00-a4d2-4ffc-8e12-0f53aea4464e",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "02dd4d26-6489-4415-89e7-e0359aff5206",
      "attributes" : { }
    }, {
      "id" : "6b205902-9949-4ab8-bdf7-a116dd77f279",
      "name" : "default-roles-mydoctor-demo",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "mydoctor-ui" : [ "view-appointment" ],
          "account" : [ "manage-account", "view-profile" ]
        }
      },
      "clientRole" : false,
      "containerId" : "02dd4d26-6489-4415-89e7-e0359aff5206",
      "attributes" : { }
    }, {
      "id" : "5a682741-2bb9-4e5a-91a4-c93208612c87",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "02dd4d26-6489-4415-89e7-e0359aff5206",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "982ee938-09b8-4663-b5ab-b738a70be200",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "40c58e36-49c3-4d06-8910-3582ab000785",
        "attributes" : { }
      }, {
        "id" : "9d0ef691-d8ff-4add-8df5-1076cc71f731",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "create-client", "view-clients", "manage-clients", "view-users", "impersonation", "query-clients", "manage-users", "manage-events", "manage-realm", "manage-authorization", "manage-identity-providers", "query-groups", "view-identity-providers", "view-events", "query-users", "view-authorization", "query-realms", "view-realm" ]
          }
        },
        "clientRole" : true,
        "containerId" : "40c58e36-49c3-4d06-8910-3582ab000785",
        "attributes" : { }
      }, {
        "id" : "6c1d92c6-ac48-4838-910c-085e4b1b72da",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "40c58e36-49c3-4d06-8910-3582ab000785",
        "attributes" : { }
      }, {
        "id" : "a2c37a4d-d46d-48af-a83d-8af05c09c8ff",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "40c58e36-49c3-4d06-8910-3582ab000785",
        "attributes" : { }
      }, {
        "id" : "ae5265a1-8a26-449c-a012-59efae6eb096",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "40c58e36-49c3-4d06-8910-3582ab000785",
        "attributes" : { }
      }, {
        "id" : "2b1d8c1c-1410-4e2e-8e84-4d704f8b02ab",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "40c58e36-49c3-4d06-8910-3582ab000785",
        "attributes" : { }
      }, {
        "id" : "80a93a7a-47b9-4409-a9a3-786647a75902",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "40c58e36-49c3-4d06-8910-3582ab000785",
        "attributes" : { }
      }, {
        "id" : "ca9ed92b-34dc-4251-95a1-2c7a7d98c377",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "40c58e36-49c3-4d06-8910-3582ab000785",
        "attributes" : { }
      }, {
        "id" : "2efa803d-783f-4128-8512-33622ed91d0f",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "40c58e36-49c3-4d06-8910-3582ab000785",
        "attributes" : { }
      }, {
        "id" : "5ed24b4c-7a92-484e-888b-06d96b3fc220",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "40c58e36-49c3-4d06-8910-3582ab000785",
        "attributes" : { }
      }, {
        "id" : "476c2c93-dc66-487f-a420-79982118ff5a",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "40c58e36-49c3-4d06-8910-3582ab000785",
        "attributes" : { }
      }, {
        "id" : "a59f5478-4f04-418a-a271-c0d3f56814a6",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "40c58e36-49c3-4d06-8910-3582ab000785",
        "attributes" : { }
      }, {
        "id" : "5929f3ac-09cf-4e27-bcd2-ab03c8e9b3b3",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "40c58e36-49c3-4d06-8910-3582ab000785",
        "attributes" : { }
      }, {
        "id" : "b387623a-a593-404f-a270-5878d7ec8d0c",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "40c58e36-49c3-4d06-8910-3582ab000785",
        "attributes" : { }
      }, {
        "id" : "7a09d263-48ea-4630-9a03-742013917ffe",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "40c58e36-49c3-4d06-8910-3582ab000785",
        "attributes" : { }
      }, {
        "id" : "6eca586d-838e-461d-8e17-6cffbc0e44f5",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "40c58e36-49c3-4d06-8910-3582ab000785",
        "attributes" : { }
      }, {
        "id" : "7dd7a052-a229-4a7f-9cbd-33d65a81dade",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "40c58e36-49c3-4d06-8910-3582ab000785",
        "attributes" : { }
      }, {
        "id" : "66917b35-93df-45f7-a039-7b4ef9a9c508",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "40c58e36-49c3-4d06-8910-3582ab000785",
        "attributes" : { }
      }, {
        "id" : "a2851acd-e9f1-408b-9b33-3822f79f71e9",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "40c58e36-49c3-4d06-8910-3582ab000785",
        "attributes" : { }
      } ],
      "mydoctor-ui" : [ {
        "id" : "9ffacdb2-009e-490b-814a-508f1a1d3b4d",
        "name" : "view-appointment",
        "description" : "",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "41846b5b-2ecb-478a-9171-304441ccd961",
        "attributes" : { }
      }, {
        "id" : "a26c39d8-f564-4412-a2f2-3c8df4911e92",
        "name" : "edit-appointment",
        "description" : "",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "41846b5b-2ecb-478a-9171-304441ccd961",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "1a54ed95-65ae-4083-acef-a2a7f40bed45",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1cea7757-2f27-4c03-86d5-df68e1b5347b",
        "attributes" : { }
      } ],
      "mydoctor-api" : [ {
        "id" : "bce96e70-2f27-4e05-9874-17db4ebaa1e4",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c3cbcfdc-f67e-4fec-a2fb-e5c0252c84d5",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "6856e46b-7fa6-4b64-aa70-0dfcd335b798",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4f7bfe74-2bdd-43e0-b109-38fbddb80a03",
        "attributes" : { }
      }, {
        "id" : "88275b12-1ada-4883-804d-999341eac3ac",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4f7bfe74-2bdd-43e0-b109-38fbddb80a03",
        "attributes" : { }
      }, {
        "id" : "7d4f9d90-1f3b-46c7-adcd-20fd4a4ec7b8",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "4f7bfe74-2bdd-43e0-b109-38fbddb80a03",
        "attributes" : { }
      }, {
        "id" : "0e4ecdb9-c530-49dd-a194-177dc685c92f",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "4f7bfe74-2bdd-43e0-b109-38fbddb80a03",
        "attributes" : { }
      }, {
        "id" : "9e4fc272-a8d4-4b7d-a4eb-019e208632aa",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4f7bfe74-2bdd-43e0-b109-38fbddb80a03",
        "attributes" : { }
      }, {
        "id" : "20ff4211-d612-4e00-a1c8-e4bb8bfb11d8",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4f7bfe74-2bdd-43e0-b109-38fbddb80a03",
        "attributes" : { }
      }, {
        "id" : "0cd2dcd6-cc29-4d02-bf6e-19d759899de7",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4f7bfe74-2bdd-43e0-b109-38fbddb80a03",
        "attributes" : { }
      }, {
        "id" : "7d6d8159-c276-4ec8-aec6-2ce19dfb7cd7",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4f7bfe74-2bdd-43e0-b109-38fbddb80a03",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "6b205902-9949-4ab8-bdf7-a116dd77f279",
    "name" : "default-roles-mydoctor-demo",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "02dd4d26-6489-4415-89e7-e0359aff5206"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
  "localizationTexts" : { },
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyExtraOrigins" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
  "users" : [ {
    "id" : "aefc79ac-4553-4753-b92d-81e24ffa575d",
    "username" : "doctor",
    "firstName" : "Doctor",
    "lastName" : "Who",
    "email" : "doctor@demo.com",
    "emailVerified" : true,
    "createdTimestamp" : 1726118978997,
    "enabled" : true,
    "totp" : false,
    "credentials" : [ {
      "id" : "7b1952ad-8fef-4ee3-9dec-213dcbf1e7ba",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1726118993124,
      "secretData" : "{\"value\":\"RqQQQlaxYTbF7K4OoGu++qcs50/EkKioOV719l1s0UQ=\",\"salt\":\"iMR06u8svAGcnJLcsbmhZA==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-mydoctor-demo" ],
    "clientRoles" : {
      "mydoctor-ui" : [ "edit-appointment" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "1805d629-5ea4-4676-a965-014365985fd5",
    "username" : "service-account-mydoctor-api",
    "emailVerified" : false,
    "createdTimestamp" : 1726119701988,
    "enabled" : true,
    "totp" : false,
    "serviceAccountClientId" : "mydoctor-api",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-mydoctor-demo" ],
    "clientRoles" : {
      "mydoctor-api" : [ "uma_protection" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "4f7bfe74-2bdd-43e0-b109-38fbddb80a03",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/mydoctor-demo/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/mydoctor-demo/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "452707b7-945b-4ddb-9434-8cfbc2b7272d",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/mydoctor-demo/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/mydoctor-demo/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "623b482a-1213-441c-ab19-f04d04058e36",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "6be1e151-48cf-4ea0-82b7-7eea99d2c58c",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "1cea7757-2f27-4c03-86d5-df68e1b5347b",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "c3cbcfdc-f67e-4fec-a2fb-e5c0252c84d5",
    "clientId" : "mydoctor-api",
    "name" : "MyDoctor API Server",
    "description" : "",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "nvYxjQFYGdNI8zj5Nb3Jz25ezWgN1cE8",
    "redirectUris" : [ "/*" ],
    "webOrigins" : [ "/*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "authorizationServicesEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "oidc.ciba.grant.enabled" : "false",
      "client.secret.creation.time" : "1726119701",
      "backchannel.logout.session.required" : "true",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "3042a70b-627d-4b3e-bd50-0991d0aa9415",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "95fe0a82-f30d-4795-94c6-f909c7da87a1",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "dc600af6-87f5-475b-bf38-11886e3e68a9",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "41846b5b-2ecb-478a-9171-304441ccd961",
    "clientId" : "mydoctor-ui",
    "name" : "MyDoctor UI SPA",
    "description" : "",
    "rootUrl" : "http://mydoctor:4200",
    "adminUrl" : "http://mydoctor:4200",
    "baseUrl" : "http://mydoctor:4200",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "http://mydoctor:4200/*" ],
    "webOrigins" : [ "http://mydoctor:4200" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "post.logout.redirect.uris" : "http://mydoctor:4200/*",
      "oauth2.device.authorization.grant.enabled" : "false",
      "display.on.consent.screen" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "40c58e36-49c3-4d06-8910-3582ab000785",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "authorizationServicesEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ],
    "authorizationSettings" : {
      "allowRemoteResourceManagement" : false,
      "policyEnforcementMode" : "ENFORCING",
      "resources" : [ {
        "name" : "idp.resource.01bc47f2-5074-4c39-a72b-8f8db18d235b",
        "type" : "IdentityProvider",
        "ownerManagedAccess" : false,
        "attributes" : { },
        "uris" : [ ],
        "scopes" : [ {
          "name" : "token-exchange"
        } ]
      } ],
      "policies" : [ {
        "name" : "myhealth-exchange-policy",
        "description" : "",
        "type" : "client",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "clients" : "[\"mydoctor-api\"]"
        }
      }, {
        "name" : "token-exchange.permission.idp.01bc47f2-5074-4c39-a72b-8f8db18d235b",
        "description" : "",
        "type" : "scope",
        "logic" : "POSITIVE",
        "decisionStrategy" : "UNANIMOUS",
        "config" : {
          "resources" : "[\"idp.resource.01bc47f2-5074-4c39-a72b-8f8db18d235b\"]",
          "scopes" : "[\"token-exchange\"]",
          "applyPolicies" : "[\"myhealth-exchange-policy\"]"
        }
      } ],
      "scopes" : [ {
        "name" : "token-exchange"
      } ],
      "decisionStrategy" : "UNANIMOUS"
    }
  }, {
    "id" : "bbfe0ad7-b105-47f8-ab6f-82c0020b0444",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/mydoctor-demo/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/mydoctor-demo/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "8a13adc1-6f10-4d01-b41b-086486ceed07",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "f297d921-6d4e-4721-9ef1-f2e917bbe3fa",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "6bc1ed64-2962-4fab-bd15-8862ecdff258",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "d756cc52-2035-460f-a73e-5247dafd72d5",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "5093cd7a-6745-4b84-b967-9a2a7d3792eb",
    "name" : "saml_organization",
    "description" : "Organization Membership",
    "protocol" : "saml",
    "attributes" : {
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "905fe769-c336-483a-ba68-ef4555b4e86b",
      "name" : "organization",
      "protocol" : "saml",
      "protocolMapper" : "saml-organization-membership-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "84616e02-f8f3-43ab-8d69-32af51e77a1e",
    "name" : "basic",
    "description" : "OpenID Connect scope for add all basic claims to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "8e901b6c-24a8-4102-ac7a-0c0d050fe9b1",
      "name" : "auth_time",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "AUTH_TIME",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "auth_time",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "cf05c083-a050-4cbc-9e96-8084fe12e4fc",
      "name" : "sub",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-sub-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "b206443a-a7f6-4031-a7ef-4c7cf43e4f98",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "860c36db-04c9-4429-9f0c-b472dee4821a",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "38d82a44-e932-4f79-ad5c-f79f6d7a5cea",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "4292c0b7-8831-459c-8da7-a8db58970837",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${profileScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "fe7252c0-875e-47de-a8f3-842408f07e03",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f16b6ac4-fee3-4e93-b299-854d0303e361",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "17f67af8-9419-4859-9aa1-142110a5ccf9",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "d6409750-d17d-4719-ab32-5f07beb1d1f1",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3eabc1bb-8fe0-4b6e-90d4-1a34bf027ff5",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "54904357-6f0b-4d98-b9b4-568c3329f88e",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "c9228e13-93c9-4ff1-aed4-5aa9ecf911af",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7003e305-6b74-4094-adec-7c14e809bf37",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "cfbe6e07-ff0d-4deb-a21f-a3c6b02ae381",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a77bdb57-29ba-4ab6-a6b1-6a63a17ff985",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "04856f1b-9466-4900-bd5e-d5bd8a9d2314",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "dae2f71d-b016-4e21-bb47-3c96a95a6d9b",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7e2e6a33-b0b4-4f36-809a-b59c8c8c58c1",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "58a89729-8bad-475a-8c58-250f2c1236b6",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "5a8d1459-bde9-4fa8-af07-15cddda05136",
    "name" : "organization",
    "description" : "Additional claims about the organization a subject belongs to",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${organizationScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "ad3565e2-45d8-45dc-abbd-74fd0105713d",
      "name" : "organization",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-organization-membership-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "fa35d080-269d-4925-a0fb-85fcb4829b47",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${emailScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "3a98db5f-f12f-4e7f-9072-f631e10d9958",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "22ea38c9-3fe9-4d4f-ba2f-6b27f86726c6",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "5fba7b72-1886-4240-9ac8-badc67279c62",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "9cdbd449-d6b9-4d9d-9680-6216c07a74b0",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "18fde631-4582-4565-ba77-d4c7fa768200",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${addressScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "fc2c8de4-baf5-4240-acd5-33195d466834",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "introspection.token.claim" : "true",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "330f92f4-a596-4368-943f-04dea9b46e46",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "${rolesScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "79d5b620-5f0c-49fd-bd07-9b20351a1f60",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "357aefb0-74a8-47ac-86fc-0c1b2eeb6a8c",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    }, {
      "id" : "7da7a8fc-9165-4450-885c-c222caeb240b",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  }, {
    "id" : "c75cd967-adf3-42f6-b224-e49c9ca8e976",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "b69caaaf-83d4-4c66-897e-e5e04d0b1607",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "dddd8d91-1716-4d3b-b2d4-808b5e0a2e5a",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "720e0517-c5c8-41dc-a0e9-be284133ace0",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "d1a00805-fb72-41de-ae24-f2bbd4e4906a",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "saml_organization", "profile", "email", "roles", "web-origins", "acr", "basic" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt", "organization" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "referrerPolicy" : "no-referrer",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ {
    "alias" : "myhealth-keycloak-oidc",
    "displayName" : "MyHealth Keycloak",
    "internalId" : "01bc47f2-5074-4c39-a72b-8f8db18d235b",
    "providerId" : "keycloak-oidc",
    "enabled" : true,
    "updateProfileFirstLoginMode" : "on",
    "trustEmail" : false,
    "storeToken" : true,
    "addReadTokenRoleOnCreate" : true,
    "authenticateByDefault" : false,
    "linkOnly" : false,
    "config" : {
      "tokenUrl" : "http://auth.myhealth:8090/realms/myhealth-demo/protocol/openid-connect/token",
      "acceptsPromptNoneForwardFromClient" : "false",
      "jwksUrl" : "http://auth.myhealth:8090/realms/myhealth-demo/protocol/openid-connect/certs",
      "isAccessTokenJWT" : "false",
      "filteredByClaim" : "false",
      "backchannelSupported" : "false",
      "caseSensitiveOriginalUsername" : "false",
      "issuer" : "http://auth.myhealth:8090/realms/myhealth-demo",
      "loginHint" : "false",
      "clientAuthMethod" : "client_secret_post",
      "syncMode" : "LEGACY",
      "clientSecret" : "GwkeCJ6Kg8ZBSrv4TiCN3StaIuKevaBD",
      "allowedClockSkew" : "0",
      "userInfoUrl" : "http://auth.myhealth:8090/realms/myhealth-demo/protocol/openid-connect/userinfo",
      "validateSignature" : "true",
      "hideOnLoginPage" : "false",
      "clientId" : "mydoctor-auth",
      "uiLocales" : "false",
      "disableNonce" : "false",
      "useJwksUrl" : "true",
      "sendClientIdOnLogout" : "false",
      "pkceEnabled" : "false",
      "metadataDescriptorUrl" : "http://auth.myhealth:8090/realms/myhealth-demo/.well-known/openid-configuration",
      "authorizationUrl" : "http://auth.myhealth:8090/realms/myhealth-demo/protocol/openid-connect/auth",
      "disableUserInfo" : "false",
      "logoutUrl" : "http://auth.myhealth:8090/realms/myhealth-demo/protocol/openid-connect/logout",
      "sendIdTokenOnLogout" : "true",
      "passMaxAge" : "false"
    }
  } ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "3cc9f7c5-1fa3-4c86-a941-5c23d16c421f",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "97606510-8a2d-4c91-8fe8-255b74dea3b7",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-full-name-mapper", "oidc-address-mapper", "saml-user-property-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-role-list-mapper", "oidc-usermodel-property-mapper", "saml-user-attribute-mapper", "oidc-usermodel-attribute-mapper" ]
      }
    }, {
      "id" : "c0e948c1-4c69-46ba-9e69-742da9d8be2c",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "3a989d29-0cc5-4f34-97bd-1e7be01aec2f",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-user-property-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-address-mapper", "saml-role-list-mapper", "oidc-usermodel-property-mapper", "saml-user-attribute-mapper", "oidc-usermodel-attribute-mapper", "oidc-full-name-mapper" ]
      }
    }, {
      "id" : "7ac92580-a4d0-4fd9-a828-4ceb367f1c52",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "73db5062-709e-45df-8823-7d751fb5b63e",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "d88e5b18-1564-46e5-94e6-720036c81a53",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "c5526019-debd-42d5-af69-82ba9a19165b",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "a50046de-0a47-4b91-8dcd-13ef05f2d051",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEA0STgKNU7k+diM1V936TfdzGnTtLhK+xpi/rCYG2zaZYmwYcot/PYWUSnT0hvImof+VvqCyxSAxIUgpzaGj/ObOg2enUnm/SgRw6PdnZYzYvjDuzC1X5v/4Ej/s2OECC/zTWK6xDwLpAIWXPQqWBV5AtgBBSYadlSkZ/1Gm7uO/eIAC0Q30+42q5gPUJTO9CVkYdkZgO5RxGqkHoraagWlOCZA69hw6xkIM74rCpBAntv5eIpcuypwjv1TzonxTFabotj1huIWeKRE6CC6iA976rG0xf2hvqipG3B+FioCNAZI7QIKETHltfv1dUCzboeOv+aaOuR+3SiJJsXfC3NmQIDAQABAoIBACbZbHkxSNCbz8o81HWtZOQ5eTxjYDfeQanioeYzIntXzKmwz1/CQDsuzUxlJl20bG2PxQ0fxbkzy9MKS1pKZXAl/26mYf3uhjJE0mHdMHg4BqywTq3FP40s4jCT4tJ8ntxB2KT7H75qe16QbJ912WaTtVl0sO4ilBugZLFtDzxck+T4OXMVjR3bzxc/zQZpEDQPyFWzcb5x4Nk8SRi+h5gpXOCchjo8WJOn8LtmyB8eeDtHwSflC1MUeBac3PC7pNwcgI80mgPMfmOSVH3FboY+186U4WrAhciFZvQQhUGuDranmh15RciKv9IVUFsO3xfo9otPdbSKvpYRTXeVvl0CgYEA8CiPj5CPD++OwP3OUpXvVTp+yW46G5bkLmNoAqPwzZyU5e8y0Vy49edsx+eUiqVTGyDimyv5Li5jc8uNIIz/5tjy2EburEt+jFGG/Yul6QqfjJ6LeA6aX1HnfREbuaDS7UVvhOnp4Zmuhc2kAiZfAO292xnZPViEdxFEt5keauUCgYEA3vCW+4wP6yqfKGmfnwGt8vTYTeMS0uYWe90NpvCHLf8Sue5DcUzeSj0Nf8gqKOj/XAumdo8Ip3emfupjGEr8ZiWVVax5veBr49Ndcrbedv1AOA6A8E6f3+BBS4iHpTH++2nNntDpqxtVDUxb3wP5BFWpc7m1diwVigJNFZbQyKUCgYBaTbYlsqLIyDhygz1Iuo5DCvrPvT3mT+e/NavPiluqxN0MVNRT+zylYn758C9frujAA66R0IgjAFhvGzQW8E3tPNib0JhAeya7lpBe2FrrdQ4nbxpca4lKnF6iHYPCWiHWDEzxuo8yQHpqX7fzAwCoNb01HNQeCCHPL9QaAV55rQKBgAxYTDP/rH38LTYCq0kVwbkbX8LoWQl+ni4brn7ZANNGNZZAIFHszL5VpSK3RcZgKIvDRWN5RiRn1rteZUBaHqHVYPCOjWs7Ox4xfRI2GBmEqoKwIumroOS3uUXieIhoPVNUp4Ms1FOaPtpuqQOvZ6Ga0LhMx0SU6lhrCjOw1zzVAoGBALtDO+PK3+/YVoVllWohaYBH1ft2ojUGyd2SCVSeoHFhICvMk/9dH4zikQ7KBnboKCjRl16xeJG7PxqrBvjbNLgZC4gs9e/lILmhf+bh2oMVoKYlliJKPMSrHu4uFKmh9Q5FOV1NH+9+TJ4hmRKWODz+mWxJfmG81v0ju2oj3LUl" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICqTCCAZECBgGR5JDNMjANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1teWRvY3Rvci1kZW1vMB4XDTI0MDkxMjA0NDgwMFoXDTM0MDkxMjA0NDk0MFowGDEWMBQGA1UEAwwNbXlkb2N0b3ItZGVtbzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANEk4CjVO5PnYjNVfd+k33cxp07S4SvsaYv6wmBts2mWJsGHKLfz2FlEp09IbyJqH/lb6gssUgMSFIKc2ho/zmzoNnp1J5v0oEcOj3Z2WM2L4w7swtV+b/+BI/7NjhAgv801iusQ8C6QCFlz0KlgVeQLYAQUmGnZUpGf9Rpu7jv3iAAtEN9PuNquYD1CUzvQlZGHZGYDuUcRqpB6K2moFpTgmQOvYcOsZCDO+KwqQQJ7b+XiKXLsqcI79U86J8UxWm6LY9YbiFnikROgguogPe+qxtMX9ob6oqRtwfhYqAjQGSO0CChEx5bX79XVAs26Hjr/mmjrkft0oiSbF3wtzZkCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAyU1v53Gh/CjwnB+R1Xk0QHIDAH1kEF0GT9LsFPstcVu/hwQ1zH8qr7M51yqiRwCX5SBUo3T6TQUijL/8zdkBadJjolE3yEhSoT6bkpIb/IzoxNX7RToyNjljNHMXVJ2KwUxCgQ472mz3NTP6uoMPHEhASTBrwjq19Za4MBRosopO71l1CITCLIgy6fhOoEpyBYaHbOS4utemYAR8E/u9UtidF3O69eZzFRIFSLkj7mExl59uOW5tUUoU3OXaviqy4fhHPaWiuqTHCgPhBGIa71bhD0GvgYGAQJ1HqTwzX6UMCxi7tfzB68CUxznWS0JxhLRwfrLCQoSrq+kPmtpeIw==" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "c93f2042-779d-4a89-a89d-b40bff5d3e4a",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "6f83bca6-cbc2-4b02-a8c8-be094f9e10b6" ],
        "secret" : [ "FKi7SyuXWm9DSk2y_zUY3w" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "c420e42f-1940-4b3d-bac8-02a17834f269",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpAIBAAKCAQEA7VykAY2chG33YPPkVXXqOPy6jdzHCvqKNmPQ0SDrbebVib02GDHocublte7GINHohnW3qExnp1EpJyXFu75nP5GDFfbNpRlB3xlTKbOczywr0Y6pKZVo40xqae6+CRo0KdDipMZY8sHM70WW4B1HGUKn0EnsHD+/4/HBeA1sYK0K91Oilx1JH0RXMCEV5Td8vwyOvzN+NfDo+/zcDEvhUgC6qGprFoxwm40ly0BI23sPp59vnh9iWbSm7f+9ZXWz0C+Eqc25JrUrUo8Ym3/mAEbk4JHXmUJsII/CiGLnZV1gHJoCo+YCSS7W3c/IkbXmEHf59gv5Ot8UhpXj07txQQIDAQABAoIBAByNbc8gBUlq3vyjKf7bwdKcGCbTfYAFFlYnmKlnb9qXD23TvGuZqVAVFWHWuK+fAH0YMQEGO9vFKBGk+g21AD+F1gJw31jyWlmndrkH+Z90PUsmgZPWfLkG6rAWf3ah18+F6JWQpIeDJ49KzDTmYLSZr40fL09QndkiLjcuSjCwtNhEf5epRdj/VCjjN6CKQZYnfMP1HzG+9muMioUaQGSKY9UjvpboBRrhJmeHG9ycPt46eVexS9f6+6MBDCfBpdBeku14YJDXSea6Int/sHAIYX5eFSCPaRd/9ANNj8atdFF87uX7eSk9WDr7XeXvHxqYBb9/6v6sPLwofTZ8rW8CgYEA9wJDTSUQKBIlrA7LBB9b8xCoK/ereBdOzJsAsGDWL/GZDTruPHhQgTjv4hCVKpPf/o+U7gzyZQlHnLR4pzKlWvYx3dyWRGe19vIV2A/DT3FqidmncCGDWsc9yRgG/0wzSy6vGgkNUgBHUPjSXlmengt6br2I8RX0vZUMNk/+kU8CgYEA9gB7rWz1GVBdjBAY24jo5XPXU4TaGB0quAmJbOczdu6ghn3hot27NlNT2bMNmIybbLeNkHukRwjtIByjFuMEpHKmRgwXKRwRpC40Vn5BPe6ti4iPqKsuo8F95L7Poy7dciUIPD3U/493wJhJKW0Jj2/F/OQwy15FbdcdJDACkG8CgYBWR6gSjluyY4RdMV2gtwN7R9o2YXC3pgyUU6BN+8VVQeLgSDFnVe9o8+Z25Kv2D2kylhzDeipBOJiXGEL8xCgWOeD5SlAC3OcmtzECI59pZIh+VlSySkKDtwzR7V6kVo2kOU5YncjVV9uRYRi6dDt/oSrG+9WVwMGYZzO41QBq6QKBgQD1TrYF0kj23TTrnoGrKXNUm5d1KV1x/mPC8X+goUyopHxeoNiH2CP/oEhVJj/AhzXVy5PXJ/RBAZ20D9px0B+o/Mrhvty5mcvdtFVsiqn0YDWelqbqwwjXMvOfTscvKmSYlmUH7YCg9yerXjBWpuyJpCQCcmpV4cPKLGBa3aUw8QKBgQDJ1owQMwDgkyhk46ZMOGEI+Z7zJvSJzm5RFpgHd9yt236EpKfKBfRKbku37XroavqhYwfgxR5jHsgrpBc4I433rpys9RSXImaLMEB3s/pSCCGRnba2JmKKhnXokLza2Oe9p89reTWIcXHyEbJ4GtO6nUk4tc34liZVBH/W87S4+w==" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICqTCCAZECBgGR5JDNVTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1teWRvY3Rvci1kZW1vMB4XDTI0MDkxMjA0NDgwMFoXDTM0MDkxMjA0NDk0MFowGDEWMBQGA1UEAwwNbXlkb2N0b3ItZGVtbzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAO1cpAGNnIRt92Dz5FV16jj8uo3cxwr6ijZj0NEg623m1Ym9Nhgx6HLm5bXuxiDR6IZ1t6hMZ6dRKSclxbu+Zz+RgxX2zaUZQd8ZUymznM8sK9GOqSmVaONMamnuvgkaNCnQ4qTGWPLBzO9FluAdRxlCp9BJ7Bw/v+PxwXgNbGCtCvdTopcdSR9EVzAhFeU3fL8Mjr8zfjXw6Pv83AxL4VIAuqhqaxaMcJuNJctASNt7D6efb54fYlm0pu3/vWV1s9AvhKnNuSa1K1KPGJt/5gBG5OCR15lCbCCPwohi52VdYByaAqPmAkku1t3PyJG15hB3+fYL+TrfFIaV49O7cUECAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAzuiCU0YZ9t6daLSAgD24YxYiu6KfRkQY7/lilFiWNQEXulTk8fy1bpxtbvGrXuzPAOO5whV344ZO+HViNDD2lfh+EZDy8QJWgtFuWZ0AuzD9xOtwdzp9VW7wnfg7V7qS4pssEHfmpjWl/odb/yMDCR0Lonrz3kA1WoIj1cVpYSeIQx1/Pvl3X0/VO9UNdnbyR1nX7A68K6EVIqhyFrRt+U1TzXLVOA/NbG1YDFUYSW7a8ficCDdZpcH81Xd30tnNK4Oaj6a0Qyn/iS9YvxAAVh+bjSj6IHwN3bKPu+lcLSf+D29d+m5JmfcvfuixvVxBhTflcAAfxesd82yKtyZ3pA==" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "6c2fc5ba-f4ff-4a69-b26e-7236fe573cd6",
      "name" : "hmac-generated-hs512",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "32a5b9c6-f893-4b81-88d1-04e9089ae7cb" ],
        "secret" : [ "wSvhKaoUFo6k2BSxMEXe09xuLmoguKaVkEuq3HrCWdRjju0qFVObgBQRo20LcsPYjDFkkeb39dt7B9rZf0AJr3zShXRWMdtkT0W26FjHmcYJuK8EifCs0zte_O_KrXwYeHwT3aDW9UJBiyLdl-WGBZACrN9gE15nTuh4__ToqPY" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS512" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "8e88a78b-358d-4896-b695-5b4fbbd132c9",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "8ddf618c-5496-40c8-9ebc-dad04f9960d0",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "82043b61-0083-4f00-9cc6-d5c5fbfbe562",
    "alias" : "Browser - Conditional Organization",
    "description" : "Flow to determine if the organization identity-first login is to be used",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "organization",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7e384d4e-bc13-4241-b603-43bc9d4cc647",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "8e2eb818-ad3f-42dd-a6d8-1406f6666a33",
    "alias" : "First Broker Login - Conditional Organization",
    "description" : "Flow to determine if the authenticator that adds organization members is to be used",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "idp-add-organization-member",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "9f9460bd-89d7-427b-b983-6dee3d6ad8de",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "40fb3234-0314-4fae-829f-a146c223fd7e",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "16c775b3-b26d-4402-84b6-32204b7333ae",
    "alias" : "Organization",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional Organization",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "981b2707-c4e8-4523-a363-afd40ccfae5f",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7b188f0c-ead9-4ee5-aa97-a6322ad4249a",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "fd016071-099c-4be6-a775-fb0447af7d9d",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "04c8bf5a-8d9d-4d5a-a231-11ec70bee7f1",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 26,
      "autheticatorFlow" : true,
      "flowAlias" : "Organization",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "72a1c84b-9e8a-41f0-bfca-eb7a8404395e",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f6f8573d-049c-42d7-9cc6-740efa2a4244",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "dd1bb464-bc65-4eba-b4b8-29dd521da514",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "98255e06-b8e4-44f4-b682-e5e7726948e0",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 50,
      "autheticatorFlow" : true,
      "flowAlias" : "First Broker Login - Conditional Organization",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "539553a4-dadd-4556-b0be-fe345623923f",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "3cde9e61-bb84-4fe5-9dc9-3051f7bbe205",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7d2bfead-bff3-4189-a803-4fa1d0c193c3",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-terms-and-conditions",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 70,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "3046382a-a2f7-40b4-b784-a03e5d2d0fde",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "14b1e2b7-6dbd-4b27-a745-4c547c396b0d",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "e0ac4397-7cbc-4bca-a06b-50e393c47657",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "0a6941f3-2936-4937-8708-af112646aacf",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "CONFIGURE_RECOVERY_AUTHN_CODES",
    "name" : "Recovery Authentication Codes",
    "providerId" : "CONFIGURE_RECOVERY_AUTHN_CODES",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "UPDATE_EMAIL",
    "name" : "Update Email",
    "providerId" : "UPDATE_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "VERIFY_PROFILE",
    "name" : "Verify Profile",
    "providerId" : "VERIFY_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 90,
    "config" : { }
  }, {
    "alias" : "delete_credential",
    "name" : "Delete Credential",
    "providerId" : "delete_credential",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 100,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "firstBrokerLoginFlow" : "first broker login",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "oauth2DevicePollingInterval" : "5",
    "parRequestUriLifespan" : "60",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false"
  },
  "keycloakVersion" : "25.0.5",
  "userManagedAccessAllowed" : false,
  "organizationsEnabled" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}